# Render Blueprint specification: https://render.com/docs/blueprint-spec
# Defines the services that make up the InsightFlow application.

# Environment Groups (Optional but recommended for secrets)
# Define environment groups in Render dashboard and reference them here
# envVarGroups:
#  - name: supabase-secrets
#    envVars:
#      - key: SUPABASE_URL
#        value: YOUR_SUPABASE_URL_HERE
#      - key: SUPABASE_SERVICE_KEY
#        value: YOUR_SUPABASE_SERVICE_KEY_HERE
#      - key: SUPABASE_ANON_KEY
#        value: YOUR_SUPABASE_ANON_KEY_HERE

services:
  # 1. Redis Cache
  - type: redis
    name: insightflow-redis
    region: ohio
    plan: free
    maxmemoryPolicy: noeviction
    ipAllowList: []

  # 2. Backend API (FastAPI Web Service + Background Worker)
  - type: web
    name: insightflow-backend
    runtime: docker
    repo: https://github.com/Emmanuelekpeh/Insightflow
    dockerfilePath: backend/Dockerfile
    dockerContext: .
    region: ohio
    plan: free
    envVars:
      - key: REDIS_HOST
        fromService:
          name: insightflow-redis
          type: redis
          property: host
      - key: REDIS_PORT
        fromService:
          name: insightflow-redis
          type: redis
          property: port
      - key: PORT
        value: 8000

  # 3. Frontend (Next.js Application)
  - name: insightflow-frontend
    type: web
    runtime: node
    repo: https://github.com/Emmanuelekpeh/Insightflow
    buildCommand: pnpm install && pnpm build
    startCommand: pnpm start
    plan: free
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: "3000"
      - key: NEXT_PUBLIC_API_URL
        value: https://insightflow-backend.onrender.com # Adjust this to your backend URL 
