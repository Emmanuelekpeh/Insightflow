# Render Blueprint specification: https://render.com/docs/blueprint-spec
# Defines the services that make up the InsightFlow application.

# Environment Groups (Optional but recommended for secrets)
# Define environment groups in Render dashboard and reference them here
# envVarGroups:
#  - name: supabase-secrets
#    envVars:
#      - key: SUPABASE_URL
#        value: YOUR_SUPABASE_URL_HERE
#      - key: SUPABASE_SERVICE_KEY
#        value: YOUR_SUPABASE_SERVICE_KEY_HERE
#      - key: SUPABASE_ANON_KEY
#        value: YOUR_SUPABASE_ANON_KEY_HERE

services:
  # 1. Redis Cache
  - name: insightflow-redis
    type: redis
    plan: free # Or choose a paid plan for more resources
    ipAllowList: [] # Optional: Restrict access; empty allows all Render services in the account
    maxmemoryPolicy: allkeys-lru # Example policy, choose as needed

  # 2. Backend API (FastAPI Web Service)
  - name: insightflow-backend
    type: web
    runtime: docker
    repo: https://github.com/YOUR_USERNAME/YOUR_REPO # Replace with your actual repo URL
    # branch: main
    dockerfilePath: ./backend/Dockerfile
    dockerContext: .
    plan: free # Or starter/standard depending on needs
    startCommand: "uvicorn backend.main:app --host 0.0.0.0 --port $PORT"
    healthCheckPath: /health
    envVars:
      - key: SUPABASE_URL
        sync: false # Set secret in Render dashboard or use envVarGroups
      - key: SUPABASE_SERVICE_KEY
        sync: false # Set secret in Render dashboard or use envVarGroups
      - key: REDIS_URL # Render provides a connection string URL for Redis
        fromService:
          type: redis
          name: insightflow-redis
          property: connectionString
      - key: REDIS_HOST # Explicit host/port needed by backend?
        fromService:
          type: redis
          name: insightflow-redis
          property: host
      - key: REDIS_PORT
        fromService:
          type: redis
          name: insightflow-redis
          property: port

  # 3. Background Worker (Arq)
  - name: insightflow-worker
    type: worker
    runtime: docker
    repo: https://github.com/YOUR_USERNAME/YOUR_REPO # Replace with your actual repo URL
    # branch: main
    dockerfilePath: ./backend/Dockerfile # Reuse the same backend image
    dockerContext: .
    plan: free # Or starter/standard depending on needs
    startCommand: "arq backend.worker.WorkerSettings"
    envVars:
      - key: SUPABASE_URL
        sync: false # Set secret in Render dashboard or use envVarGroups
      - key: SUPABASE_SERVICE_KEY
        sync: false # Set secret in Render dashboard or use envVarGroups
      - key: REDIS_URL
        fromService:
          type: redis
          name: insightflow-redis
          property: connectionString
      - key: REDIS_HOST # Explicit host/port needed by worker?
        fromService:
          type: redis
          name: insightflow-redis
          property: host
      - key: REDIS_PORT
        fromService:
          type: redis
          name: insightflow-redis
          property: port

  # 4. Frontend (Next.js Static Site)
  - name: insightflow-frontend
    type: static # Use 'static' for Next.js static export or SPA
    repo: https://github.com/YOUR_USERNAME/YOUR_REPO # Replace with your actual repo URL
    # branch: main
    # rootDir: ./ # Assuming Next.js is at the root
    buildCommand: "pnpm install && pnpm build" # Adjust if using npm/yarn
    publishDir: out # For static export; if SSR/ISR, use 'web' type instead
    plan: free # Or starter/standard depending on needs
    # Static sites generally don't need runtime env vars here, set build vars if needed
    # envVars:
    #   - key: NEXT_PUBLIC_SUPABASE_URL
    #     sync: false # Set in Render Dashboard
    #   - key: NEXT_PUBLIC_SUPABASE_ANON_KEY
    #     sync: false # Set in Render Dashboard
    #   - key: NEXT_PUBLIC_API_BASE_URL # For build time if needed
    #     value: http://insightflow-backend:10000
    # Rewrites handle API proxying and client-side routing
    routes:
      - type: rewrite
        source: /api/(.*)
        destination: http://insightflow-backend:10000/api/$1 # Proxy to backend
      - type: rewrite
        source: /*
        destination: /index.html # SPA fallback 